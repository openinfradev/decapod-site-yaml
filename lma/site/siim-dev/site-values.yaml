apiVersion: openinfradev.github.com/v1
kind: HelmValuesTransformer
metadata:
  name: site

global:
  nodeSelector:
    taco-lma: enabled
  clusterName: siim-dev
  storageClassName: rbd
  serviceScrapeInterval: 10s
  federateScrapeInterval: 10s
charts:
- name: prometheus-operator
  override:
    prometheusOperator.nodeSelector: $(nodeSelector)

- name: eck-operator

- name: prometheus  
  override:
    kubeEtcd.endpoints:
    - 192.168.105.161
    - 192.168.105.162
    - 192.168.105.163
    prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.storageClassName: $(storageClassName)
    prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage: 200Gi
    prometheus.prometheusSpec.retention: 30d
    prometheus.prometheusSpec.externalLabels.taco_cluster: siim-dev
    prometheus.prometheusSpec.nodeSelector: $(nodeSelector)
    
- name: prometheus-fed-master    
  override:
    alertmanager.alertmanagerSpec.nodeSelector: $(nodeSelector)
    alertmanager.alertmanagerSpec.retention: 120h
    alertmanager.config.global.slack_api_url: https://hooks.slack.com/services/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
    prometheus.prometheusSpec.nodeSelector: $(nodeSelector)
    prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.storageClassName: $(storageClassName)
    prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage: 500Gi
    alertmanager.config.receivers:
    - name: 'default-alert'
      slack_configs:
      - channel: "#alert"
        username: "Prometheus"
        send_resolved: true
        title: |-
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if or (and (eq (len .  Alerts.Firing) 1) (eq (len .Alerts.Resolved) 0)) (and (eq (len .Alerts.Firing) 0) (eq (len .Alerts.Resolved) 1)) }} {{ range .    Alerts.Firing }}{{ .Labels.alertname }}{{ end }}{{ range .Alerts.Resolved }}{{ .Labels.alertname }}{{ end }}{{ end }}
        text: |-
          {{ if or (and (eq (len .Alerts.Firing) 1) (eq (len .Alerts.Resolved) 0)) (and (eq (len .Alerts.Firing) 0) (eq (len .Alerts.Resolved) 1)) }} {{ range .Alerts.Firing }}{{ .Annotations.message }}{{ end }}{{ range .Alerts.Resolved }}{{ .Annotations.message  }}{{ end }}
          {{ else }}
          {{ if gt (len .Alerts.Firing) 0 }}
          *Alerts Firing:*
            {{ range .Alerts.Firing }}- {{ .Labels.alertname  }}: {{ .Annotations.message }}
          {{ end }}{{ end }}
          {{ if gt (len .Alerts.Resolved) 0 }}
          *Alerts Resolved:*
            {{ range .Alerts.Resolved }}- {{ .Labels.alertname }}: {{ .Annotations.message }}
          {{ end }}{{ end }}
          {{ end }}
    - name: 'slack-alert'
      slack_configs:
      - channel: "#info-by-system"  #FIXME
        username: "Prometheus"
        send_resolved: true
        title: |-
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if or (and (eq (len .  Alerts.Firing) 1) (eq (len .Alerts.Resolved) 0)) (and (eq (len .Alerts.Firing) 0) (eq (len .Alerts.Resolved) 1)) }} {{ range .    Alerts.Firing }}{{ .Labels.alertname }}{{ end }}{{ range .Alerts.Resolved }}{{ .Labels.alertname }}{{ end }}{{ end }}
        text: |-
          {{ if or (and (eq (len .Alerts.Firing) 1) (eq (len .Alerts.Resolved) 0)) (and (eq (len .Alerts.Firing) 0) (eq (len .Alerts.Resolved) 1)) }} {{ range .Alerts.Firing }}{{ .Annotations.message }}{{ end }}{{ range .Alerts.Resolved }}{{ .Annotations.message  }}{{ end }}
          {{ else }}
          {{ if gt (len .Alerts.Firing) 0 }}
          *Alerts Firing:*
            {{ range .Alerts.Firing }}- {{ .Labels.alertname  }}: {{ .Annotations.message }}
          {{ end }}{{ end }}
          {{ if gt (len .Alerts.Resolved) 0 }}
          *Alerts Resolved:*
            {{ range .Alerts.Resolved }}- {{ .Labels.alertname }}: {{ .Annotations.message }}
          {{ end }}{{ end }}
          {{ end }}
    - name: 'telegram-alert'
      webhook_configs:
      - send_resolved: True
        url: http://prometheus-bot:9087/alert/-GROUP_ID
  
- name: prometheus-node-exporter  

- name: kube-state-metrics  
  override:
    nodeSelector: $(nodeSelector)

- name: prometheus-pushgateway  
  override:
    nodeSelector: $(nodeSelector)

- name: prometheus-process-exporter  
  override:
    conf.processes: dockerd,kubelet,kube-proxy,ntpd,node

- name: eck-resource 
  override:
    customResource.kibana.nodeSelector: $(nodeSelector)
    
    customResource.elasticsearch.nodeSets.master.nodeSelector: $(nodeSelector)
    customResource.elasticsearch.nodeSets.master.javaOpts: "-Xms2g -Xmx2g"
    customResource.elasticsearch.nodeSets.master.limitCpu: 2
    customResource.elasticsearch.nodeSets.master.limitMem: 4Gi
    customResource.elasticsearch.nodeSets.master.pvc.storageClassName: $(storageClassName)
    customResource.elasticsearch.nodeSets.master.pvc.size: 2Gi

    customResource.elasticsearch.nodeSets.hotdata.nodeSelector: $(nodeSelector)
    customResource.elasticsearch.nodeSets.hotdata.javaOpts: "-Xms10g -Xmx10g"
    customResource.elasticsearch.nodeSets.hotdata.limitCpu: 2
    customResource.elasticsearch.nodeSets.hotdata.limitMem: 20Gi
    customResource.elasticsearch.nodeSets.hotdata.pvc.storageClassName: $(storageClassName)
    customResource.elasticsearch.nodeSets.hotdata.pvc.size: 200Gi

    customResource.elasticsearch.nodeSets.client.enabled: true
    customResource.elasticsearch.nodeSets.client.nodeSelector: $(nodeSelector)
    customResource.elasticsearch.nodeSets.client.javaOpts: "-Xms10g -Xmx10g"
    customResource.elasticsearch.nodeSets.client.limitCpu: 2
    customResource.elasticsearch.nodeSets.client.limitMem: 20Gi
    customResource.elasticsearch.nodeSets.client.pvc.storageClassName: $(storageClassName)


- name: grafana  
  override:
    adminPassword: password
    persistence.storageClassName: $(storageClassName)

- name: fluentbit-operator  
  override:
    global.base_cluster_url: $(clusterName)
    fluentbitOperator.nodeSelector: $(nodeSelector)
    logExporter.nodeSelector: $(nodeSelector)

- name: fluentbit  
  override:
    global.base_cluster_url: $(clusterName)
    global.nodeSelector: $(nodeSelector)
    fluentbit.clusterName: $(clusterName)
    fluentbit.outputs.es.host: taco-elasticsearch-es-http.lma.svc.$(clusterName)
    fluentbit.outputs.kafka:
      enabled: false
      broker: "suy-prd-elk-kfk-01:9092,suy-prd-elk-kfk-02:9092,suy-prd-elk-kfk-03:9092,suy-prd-elk-kfk-04:9092,suy-prd-elk-kfk-05:9092,suy-prd-elk-kfk-06:9092,suy-prd-elk-kfk-07:9092,suy-prd-elk-kfk-08:9092,suy-prd-elk-kfk-09:9092,suy-prd-elk-kfk-10:9092,suy-prd-elk-kfk-11:9092"
      topic: taco-suy-adm-logs
    fluentbit.esTemplate.url: https://taco-elasticsearch-es-http.lma.svc.$(clusterName):9200
    fluentbit.nodeSelector: $(nodeSelector)

- name: addons  
  override:
    serviceMonitor.trident:
      enabled: true
      interval: $(serviceScrapeInterval)
    serviceMonitor.kubelet.interval: 30s

- name: fed-addons  
  override:
    metricbeat.enabled: false
    metricbeat.elasticsearch.host: https://taco-elasticsearch-es-http.lma.svc.$(clusterName):9200
    metricbeat.kibana.host: taco-kibana-dashboard-kb-http.lma.svc.$(clusterName):5601
    metricbeat.prometheus.hosts:
    - fed-master-prometheus.fed.svc.$(clusterName):9090
    tacoWatcher.host: taco-watcher.fed.svc.$(clusterName)
    tacoWatcher.joinCluster.body.kibanaUrl: http://taco-kibana-dashboard-kb-http.lma.svc.$(clusterName):5601
    tacoWatcher.joinCluster.body.grafanaUrl: http://grafana.fed.svc.$(clusterName)
    tacoWatcher.joinCluster.body.k8sUrl: https://kubernetes.default.svc.$(clusterName)
    kibanaInit.url: http://taco-kibana-dashboard-kb-http.lma.svc.$(clusterName):5601
    serviceMonitor.federations:
    - name: admin-federate
      namespace: lma
      interval: $(federateScrapeInterval)
      selector:
        app: prometheus
        prometheus: lma-prometheus
      port: 9090
    - name: siim-main-federate
      interval: $(federateScrapeInterval)
      addresses:
      - 192.168.105.161
      - 192.168.105.162
      - 192.168.105.163
      port: 30008

- name: prometheus-adapter  
  override:
    nodeSelector: $(nodeSelector)

- name: kubernetes-event-exporter  
  override:
    conf.default.hosts:
    - "https://taco-elasticsearch-es-http.lma.svc.$(clusterName):9200"
